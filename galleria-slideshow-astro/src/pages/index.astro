---
import BaseLayout from "../layout/BaseLayout.astro";
import Container from "../components/Container.astro";

import data from "../data/data-with-sizes.json";
---

<BaseLayout title="Galleria">
  <Container className="mt-[20px] sm:mt-[40px]">
    <section class="gallery">
      <div class="gallery-masonry">
        {
          data.map(({ name, artist, images: { thumbnail, hero } }, idx) => {
            const styleImage = `--thumbnail-width:${thumbnail.width}; --thumbnail-height:${thumbnail.height};--grid-area:area-${idx};`;

            const numberSpanMd = Math.floor(thumbnail.height / 10) + 4;
            const numberSpanXl = Math.floor(thumbnail.height / 60) + 1;
            const styleItem = `--grid-area: ga-${idx};--grid-span-md: span ${numberSpanMd};--grid-span-xl: span ${numberSpanXl};`;

            return (
              <a
                href={`/art/${idx}`}
                class={`gallery__item-link gallery__item-${idx}`}
                style={styleItem}
              >
                {/* <figure
  role="button"
  tabindex="0"
  aria-haspopup="dialog"
  aria-controls={`modal-${idx}`}
  aria-label={`View details about "${name}" by ${artist.name}`}
  onclick="openModal(idx)"  <!-- or use Astro/JS handler -->
  onkeypress="if(event.key==='Enter' || event.key===' ') openModal(idx)"
> */}

                <figure
                  id={`galleryItem${idx}`}
                  class="gallery__item relative"
                  aria-labelledby={`caption-${idx}`}
                  data-item-idx={idx}
                  role="group"
                >
                  <picture>
                    <img
                      style={styleImage}
                      class="gallery__item--image lazy-image"
                      src={thumbnail.src}
                      alt={`Painting titled "${name}" by ${artist.name}`}
                      loading="lazy"
                    />
                  </picture>

                  <figcaption
                    id={`caption-${idx}`}
                    class="gallery__item--caption flex flex-col gap-3.5 justify-center items-start"
                  >
                    <span class="gallery__paint-name text-white text-shadow-[1px_1px_rgb(0_0_0_/_0.5)] text-preset-2-mobile ">
                      order {idx} / {name}
                    </span>
                    <span class="gallery__paint-artist text-white-75 text-shadow-[1px_1px_rgb(0_0_0_/_0.5)] text-preset-5">
                      {artist.name}
                    </span>
                  </figcaption>
                </figure>
              </a>
            );
          })
        }
      </div>
    </section>
  </Container>

  <!-- <div
  id={`modal-${idx}`}
  role="dialog"
  aria-modal="true"
  aria-labelledby={`modal-title-${idx}`}
  aria-describedby={`modal-desc-${idx}`}
>
  <h2 id={`modal-title-${idx}`}>{name}</h2>
  <p id={`modal-desc-${idx}`}>{artist.name}</p>
  Close button should return focus to the figure -->
</BaseLayout>

<!-- <script type="module">
  window.addEventListener("load", () => {
    document.querySelectorAll(".gallery__item img").forEach((img) => {
      const figure = img.closest(".gallery__item");
      if (figure) figure.classList.add("fade-in");
    });
  });
</script> -->

<script type="module">
  const observer = new IntersectionObserver(
    (entries, observer) => {
      let delay = 0;

      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          const item = entry.target;

          item.style.transitionDelay = `${delay * 100}ms`;
          item.classList.add("fade-in");

          observer.unobserve(item);
          delay++;
        }
      });
    },
    {
      threshold: 0.1, // Trigger when 10% visible
    }
  );

  document.querySelectorAll(".gallery__item").forEach((item) => {
    observer.observe(item);
  });
</script>

<style>
  .gallery-masonry {
    display: grid;
    gap: 40px;
    justify-content: center;
    width: 100%;
    max-width: 1360px;
    margin-inline: auto;
  }

  .gallery__item--caption {
    position: absolute;
    bottom: 30px;
    left: 30px;
    max-width: 246px;
  }

  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(10px); /* Less motion = smoother */
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .gallery__item {
    opacity: 0;
    transform: translateY(10px);
    transition:
      opacity 0.8s ease,
      transform 0.8s ease;
    will-change: opacity, transform;
  }

  .gallery__item.fade-in {
    opacity: 1;
    transform: translateY(0);
  }

  .gallery__item .gallery__item--caption {
    opacity: 0;
    transform: translateY(10px);
    transition:
      opacity 0.4s ease,
      transform 0.4s ease;
    transition-delay: 0.2s;
  }

  .gallery__item.fade-in .gallery__item--caption {
    opacity: 1;
    transform: translateY(0);
  }

  .lazy-image {
    filter: blur(10px);
    transition: filter 0.4s ease;
  }

  .gallery__item.fade-in .lazy-image {
    filter: blur(0);
  }

  .gallery__item-link {
    margin-inline: auto;
    break-inside: avoid;
  }

  .gallery__item--image {
    aspect-ratio: var(--thumbnail-width) / var(--thumbnail-height);
    width: 100%;
    object-fit: cover;
  }

  .gallery__item-link {
    width: 100%;
    max-width: 500px;
  }

  @media screen and (min-width: 48em) {
    .gallery-masonry {
      display: grid;
      grid-template-columns: repeat(2, minmax(310px, 310px));
      grid-auto-rows: 10px;
      gap: 0;
      column-gap: 40px;
    }

    .gallery__item-link {
      grid-row-end: var(--grid-span-tablet);
    }
  }

  @media screen and (min-width: 48em) {
    .gallery-masonry {
      display: grid;
      grid-template-columns: repeat(2, minmax(310px, 310px));
      grid-auto-rows: 10px;
      gap: 0;
      column-gap: 40px;
    }

    .gallery__item-link {
      grid-row-end: var(--grid-span-md);
    }
  }

  @media screen and (min-width: 50em) {
    .gallery-masonry {
      grid-template-columns: repeat(2, minmax(310px, 420px));
      grid-auto-rows: 11px;
    }
  }

  @media screen and (min-width: 52em) {
    .gallery-masonry {
      grid-auto-rows: 12px;
    }
  }

  @media screen and (min-width: 60.25em) {
    .gallery-masonry {
      grid-auto-rows: 13px;
    }
  }

  @media screen and (min-width: 63.75em) {
    .gallery-masonry {
      grid-template-columns: repeat(4, minmax(227px, 310px));
      grid-auto-rows: 7px;
    }
  }

  @media screen and (min-width: 66em) {
    .gallery-masonry {
      grid-auto-rows: 7px;
    }
  }

  @media screen and (min-width: 75em) {
    .gallery-masonry {
      grid-auto-rows: 9px;
    }
  }

  @media screen and (min-width: 85em) {
    .gallery-masonry {
      grid-template-columns: repeat(4, 310px);
      grid-auto-rows: 11px;
    }
  }

  @media screen and (min-width: 90em) {
    .gallery__item-link {
      grid-row-end: var(--grid-span-xl);
    }

    .gallery-masonry {
      grid-auto-rows: 60px;
    }

    .gallery__item-4 {
      margin-top: -8px;
    }

    .gallery__item-5 {
      grid-column: 2;
      grid-row: 8;
    }

    .gallery__item-6 {
      margin-top: 10px;
    }

    .gallery__item-7 {
      margin-top: -25px;
    }

    .gallery__item-8 {
      grid-column: 1;
      grid-row: 12;
    }

    .gallery__item-9 {
      grid-column: 2;
      grid-row: 13;
    }

    .gallery__item-10 {
      grid-column: 4;
      grid-row: 11;
      margin-top: -40px;
    }

    .gallery__item-11 {
      grid-column: 1;
      grid-row: 19;
    }

    .gallery__item-12 {
      grid-column: 2;
      grid-row: 18;
      margin-top: -6px;
    }

    .gallery__item-13 {
      grid-column: 3;
      grid-row: 15;
      margin-top: -11px;
    }

    .gallery__item-14 {
      grid-column: 4;
      grid-row: 18;
      margin-top: -16px;
    }
  }

  /* @media screen and (min-width: 90em) {
    .gallery__item-link {
      grid-area: var(--grid-area);
      grid-row-end: span 0;
    }

    .gallery-masonry {
      grid-auto-rows: initial;
      gap: 40px;
      grid-template-areas:
        "ga-0  ga-1  ga-2  ga-3"
        "ga-4  ga-1  ga-6  ga-3"
        "ga-4  ga-1  ga-6  ga-3"
        "ga-4  ga-5  ga-6  ga-7"
        "ga-8  ga-5  ga-6  ga-7"
        "ga-8  ga-9  ga-13 ga-10"
        "ga-11 ga-12 ga-13 ga-14";
    }
  } */
</style>
